scalar Url
scalar DateTime
scalar NonNegativeInt
scalar Date

enum SolutionCategory{
    EXPLANATION
    REFERENCE
}

type Query{
    me:User!
    problemLatestList:[Problem!]
    itemSearch(filter:SearchItemFilter):[SearchableItem]
    problemDetails(id:ID!):Problem!
}

type Mutation{
    userCreate(user:UserCreateInput!):UserResponse!
    userLogin(user:UserLoginInput!):UserResponse!
    userActivation(user:UserActivationInput!):UserActivationResponse!
    problemCreate(problem:ProblemCreateInput!):ProblemResponse!
    solutionCreate(solution:SolutionCreateInput!):SolutionResponse!
    solutionVote(vote:SolutionVoteInput!):SolutionResponse!
}

type Subscription{
    problemAdded:Problem!
    solutionVoteChanged(solution:ID!):Solution!
}

interface SearchableItem{
    id:ID!
    createDateTime:DateTime!
    prettyCreateDateTime:String
    content:String!
    author:User!
}

input SearchItemFilter{
    keyword:String!
}

input UserCreateInput{
    username:String!
    email:String!
    password:String!
    displayName:String
    avatar:Url
}

input UserLoginInput{
    username:String!
    password:String!
}

input UserActivationInput{
    username:ID!
    active:Boolean
}

input ProblemCreateInput{
    title:String!
    content:String!
    tags:[String!]
}

input SolutionCreateInput{
    content:String!
    category:SolutionCategory!
    problemId:ID!
}

input SolutionVoteInput{
    solutionId:ID!
    voteAsGood:Boolean!
}




